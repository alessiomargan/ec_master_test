syntax = "proto2";

package iit.advr;

import "header.proto";
import "vector2d.proto";

message Smoother_step {

    repeated gazebo.msgs.Vector2d  point = 1;
}

message Gains {

    enum Type { 
        POSITION    = 1;
        IMPEDANCE   = 2;
        TORQUE      = 3;
    }
    // Identifies which field is filled in.
    required Type   type = 1;
    
    required double kp  = 2;
    required double ki  = 3;
    required double kd  = 4;
    optional double kkp = 5;
    optional double kki = 6;
    optional double kkd = 7;
    
}

message Repl_hdr {

}

message Ctrl_cmd {
    
    enum Type {
        CTRL_TEST_DONE          = 1;
        CTRL_TEST_ERROR         = 2;
        CTRL_DAC_TUNE           = 3;
        CTRL_REMOVE_TORQUE_OFFS = 4;
        CTRL_SET_ZERO_POSITION  = 5;
        CTRL_FAN                = 6;
        CTRL_LED                = 7;
        CTRL_SANDBOX            = 8;
        CTRL_REF_FILTER         = 9;
        CTRL_POWER_MOD          = 10;
        CTRL_CMD_START          = 11;
        CTRL_CMD_STOP           = 12;
        
    }
    // Identifies which field is filled in.
    required Type   type        = 1;
    required int32  board_id    = 2;

    optional float  value       = 3;
}

message Flash_cmd {

    enum Type { 
        SAVE_PARAMS_TO_FLASH    = 1;
        LOAD_PARAMS_FROM_FLASH  = 2;
        LOAD_DEFAULT_PARAMS     = 3;
        
    }
    // Identifies which field is filled in.
    required Type   type        = 1;
    required int32  board_id    = 2;
}

message Ecat_Master_cmd {

    enum Type { 
        START_MASTER        = 1;
        STOP_MASTER         = 2;
        GET_SLAVES_DESCR    = 3;
        
    }
    // Identifies which field is filled in.
    required Type   type        = 1;
}

enum CmdType { 
    SET_SMOOTHER_STEP   = 1;
    SET_GAINS           = 2;
    CTRL_CMD            = 3;
    FLASH_CMD           = 4;
    ECAT_MASTER_CMD     = 5;    
}

message Repl_cmd {

    // Identifies which field is filled in.
    required CmdType            type = 1;
    
    optional gazebo.msgs.Header header = 2;
    
    // One of the following will be filled in.
    optional Smoother_step      smoother_step   = 3;
    optional Gains              gains           = 4;
    optional Ctrl_cmd           ctrl_cmd        = 5;
    optional Flash_cmd          flash_cmd       = 6;
    optional Ecat_Master_cmd    ecat_master_cmd = 7;
        
}

message Cmd_reply {

   enum Type { 
        ACK  = 1;
        NACK = 2;
    }
    // Identifies which field is filled in.
    required Type           type        = 1;
    required CmdType        cmd_type    = 2;
    required string         msg         = 3;
    
    optional gazebo.msgs.Header header  = 4;
    
}
